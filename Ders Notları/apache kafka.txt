Apache Kafka 
Ã¶rn: datawarehousei ile uygulama suncuu arasÄ±dkai haberleÅŸmeyi saÄŸlar
#bir sistemin diger bir sistemle 10ms altÄ±nda veri akÄ±s hizmeti sunabilir 
#linkedin tarafÄ±ndan geliÅŸtirilmiÅŸ
#distributed streaming platform olarak da adlandÄ±rÄ±lÄ±r(dagÄ±tÄ±k duraksÄ±z iletim ortamÄ±)
#FTHA(fault tolerance and high avaibility)
# Kafka verilerin bu kaynak sistemlerden, analiz sistemlerine aktarÄ±mÄ± iÃ§in biÃ§ilmiÅŸ kaftan.
ğŸ’¡ Kafka bir veritabanÄ± deÄŸildir, veriler sÄ±nÄ±rlÄ± zamanda hataya dayanÄ±klÄ± bir ÅŸekilde saklanÄ±r, varsayÄ±lan sÃ¼re bir haftadÄ±r.
-TÃ¼m veriyi tek bir dosyadan okumaktansa farklÄ± dosyalardan okumak hem daha performanslÄ± hem de hataya karÅŸÄ± daha tÃ¶leranslÄ±.
Bu sebeple topicler bir veya birden fazla bÃ¶lÃ¼mden (Partition) meydana gelirler
 
 
topics: kayÄ±tlarÄ±n bir akÄ±ÅŸÄ±ndan baÅŸka bir ÅŸey deÄŸildir.key value olarak tutulur ,offsset indexleridir
producers:seÃ§ilen topice gÃ¶re veriyi Ã¼retir eder
consumers:seÃ§ilen topice abone olur ve veriyi tÃ¼ketir.
broker: mesaj alÄ±ÅŸverÅŸinden sorumlu olan kafka instancelarÄ±na broker denir standole veya bir kÃ¼menin parÃ§asÄ± olarak kullanÄ±labilir
partitions:producersdan gelen veriyi parÃ§alara ayÄ±rarak gÃ¶nderir.


zookeeper kafka ile Ã§alÄ±ÅŸÄ±r kafkanÄ± clusterlarÄ±nÄ± kontrol eder
statusune bakan bakÄ±mÄ±nÄ± yapan araÃ§ 



-*-*-

bin/zookeeper-server-start.sh config/zookeeper.properties //zookeeper baÅŸlatmak
bin/kafka-server-start.sh config/server.properties //kafka baÅŸlatmak


bin/kafka-server-start.sh config/kraft/server.properties // server baÅŸlat
bin/kafka-topics.sh --create --topic topicname --bootstrap-server localhost:9092 //topic oluÅŸturme
./kafka-topics.sh --list --bootstrap-server localhost:9092 //topiclerin listesi

./kafka-console-producer.sh --broker-list localhost:9092 --topic deptopic //producer sÃ¼reÃ§ baÅŸlatmak

crtl+c ile Ã§Ä±kÄ±lÄ±p consume edilir

./kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic quickstart-events --from-beginning


